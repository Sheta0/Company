@model IEnumerable<Employee>

@{
    ViewData["Title"] = "All Employees";
    // ViewData["Message"];

    string? ViewDataMessage = ViewData["Message"] as string; // Enforce Type Safety => Requires Casting [Strong Type]
    string? ViewBagMessage = ViewBag.Message; // Can't Enforce Type Safety (Dynamic) => doesn't require casting [Weak Type]
}


<h1 class="text-center my-4">All Employees</h1>

@* <div class="alert alert-danger">
    @ViewData["Message"]
</div>
 *@

@* <div class="alert alert-danger">
    @ViewBag.Message
</div> *@

@if(!string.IsNullOrEmpty(TempData["Message"] as string))
{
<div class="alert alert-info">
    @TempData["Message"]
</div>
}


<div class="text-end mb-3">
    <a class="btn btn-primary" asp-action="Create">Create New Employee</a>
</div>


@if(Model.Count() > 0) 
{
    <table class="table table-striped table-bordered table-hover">
        <thead class="table-dark">
            <tr>
                <th>@Html.DisplayNameFor(E => E.Name)</th>
                <th>@Html.DisplayNameFor(E => E.Age)</th>
                <th>@Html.DisplayNameFor(E => E.Email)</th>
                <th>@Html.DisplayNameFor(E => E.Address)</th>
                <th>@Html.DisplayNameFor(E => E.Phone)</th>
                <th>@Html.DisplayNameFor(E => E.Salary)</th>
                <th>@Html.DisplayNameFor(E => E.IsActive)</th>
                <th>@Html.DisplayNameFor(E => E.IsDeleted)</th>
                <th>@Html.DisplayNameFor(E => E.HiringDate)</th>
                <th>@Html.DisplayNameFor(E => E.CreateAt)</th>
                <th>@Html.DisplayNameFor(E => E.DepartmentId)</th>
                <th>Details</th>
                <th>Update</th>
                <th>Delete</th>
            </tr>
        </thead>
        <tbody>
            @foreach(var employee in Model)
            {
                <tr>
                    <td>@employee.Name</td>
                    <td>@employee.Age</td>
                    <td>@employee.Email</td>
                    <td>@employee.Address</td>
                    <td>@employee.Phone</td>
                    <td>@Html.DisplayFor(M => employee.Salary)</td>
                    <td>@employee.IsActive</td>
                    <td>@employee.IsDeleted</td>
                    <td>@employee.HiringDate</td>
                    <td>@employee.CreateAt</td>
                    @if (employee.Department is not null)
                    {
                        <td>@employee.Department.Name</td>
                    }
                    else
                    {
                        <td>No Department</td>
                    })
                    <partial name="_ButtonsPartialView" model="@employee.Id" />
                </tr>
            }
        </tbody>
    </table>
}
else 
{
    <div class="mt-4 alert alert-warning">
        <h3>There is NO Employees</h3>
    </div>
}
