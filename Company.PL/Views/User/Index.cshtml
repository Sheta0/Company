@model IEnumerable<UserToReturnDTO>

@{
    ViewData["Title"] = "All Users";
}

<div class="nova-page-header">
    <h1 class="nova-page-title">All Users</h1>
</div>

@if (!string.IsNullOrEmpty(TempData["Message"] as string))
{
    <div class="nova-alert nova-alert-info">
        @TempData["Message"]
    </div>
}

<div class="nova-card nova-mb-6">
    <div class="nova-card-body">
        <form asp-action="Index" method="get" class="nova-flex nova-mb-4 nova-gap-2">
            <input type="text" class="nova-input" id="SearchInput" name="SearchInput" placeholder="Search by name..." style="max-width: 300px;">
            <button type="submit" class="nova-btn nova-btn-primary">
                <i class="fas fa-search"></i> Search
            </button>
        </form>

        @if (Model.Count() > 0)
        {
            <div class="nova-table-responsive">
                <table class="nova-table nova-table-striped">
                    <thead>
                        <tr>
                            <th>@Html.DisplayNameFor(E => E.Id)</th>
                            <th>@Html.DisplayNameFor(E => E.UserName)</th>
                            <th>@Html.DisplayNameFor(E => E.FirstName)</th>
                            <th>@Html.DisplayNameFor(E => E.LastName)</th>
                            <th>@Html.DisplayNameFor(E => E.Email)</th>
                            <th>@Html.DisplayNameFor(E => E.Roles)</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var user in Model)
                        {
                            <tr>
                                <td>@user.Id</td>
                                <td>@user.UserName</td>
                                <td>@user.FirstName</td>
                                <td>@user.LastName</td>
                                <td>@Html.DisplayFor(M => user.Email)</td>
                                <td>
                                    @if (user.Roles is null || !user.Roles.Any())
                                    {
                                        <span>No Roles</span>
                                    }
                                    else
                                    {
                                        @string.Join(", ", user.Roles)
                                    }
                                    
                                </td>
                                <td>
                                    <partial name="_ButtonsPartialView" model="@user.Id" />
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="nova-alert nova-alert-warning">
                <h3 class="nova-mb-0">There are no users</h3>
            </div>
        }
    </div>
</div>

<script>
    $(document).ready(function() {
        const searchBar = $('#SearchInput');
        const tableBody = $('table tbody');
        searchBar.on('keyup', function(e) {
            var searchValue = searchBar.val();
            $.ajax({
                url: '/User/Search',
                type: 'GET',
                data: { SearchInput: searchValue },
                success: function(result) {
                    tableBody.html(result);
                },
                error: function(xhr, status, error) {
                    console.log(error);
                }
            });
        });
    });
</script>
